generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  category_id String   @id @default(uuid())
  title       String   @unique
  visible     Boolean  @default(true)
  order_no    Int      @default(autoincrement())
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model User {
  user_id      String         @id @default(uuid())
  email        String         @unique
  password     String
  salt         String
  name         String
  role         Role           @default(USER)
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  Order        Order[]
  Order_detail Order_detail[]
}

model Cafeteria {
  cafeteria_id   String           @id @default(uuid())
  cafeteria_name String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  menus          Cafeteria_menu[]
  Order          Order[]
}

model Cafeteria_menu {
  menu_id      String         @id @default(uuid())
  menu_title   String
  price        Int
  cafeteria_id String?
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  cafeteria    Cafeteria?     @relation(fields: [cafeteria_id], references: [cafeteria_id])
  orderDetails Order_detail[]
}

model Order {
  order_id     String         @id @default(uuid())
  order_date   DateTime       @default(now())
  order_state  OrderState     @default(PENDING)
  user_id      String
  cafeteria_id String
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  cafeteria    Cafeteria      @relation(fields: [cafeteria_id], references: [cafeteria_id])
  user         User           @relation(fields: [user_id], references: [user_id])
  orderDetails Order_detail[]
}

model Order_detail {
  order_detail_id String         @id @default(uuid())
  menu_count      Int
  menu_id         String
  user_id         String
  order_id_fk     String
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt
  menu            Cafeteria_menu @relation(fields: [menu_id], references: [menu_id])
  order           Order          @relation(fields: [order_id_fk], references: [order_id], onDelete: Cascade)
  user            User           @relation(fields: [user_id], references: [user_id])
}

enum Role {
  USER
  ADMIN
}

enum OrderState {
  PENDING
  COMPLETED
}
